import{_ as a,c as i,o as l,a3 as e}from"./chunks/framework.BI4_r7ev.js";const u=JSON.parse('{"title":"CSS 基础相关","description":"","frontmatter":{},"headers":[],"relativePath":"css-md/basis.md","filePath":"css-md/basis.md"}'),t={name:"css-md/basis.md"},s=e('<h1 id="css-基础相关" tabindex="-1">CSS 基础相关 <a class="header-anchor" href="#css-基础相关" aria-label="Permalink to &quot;CSS 基础相关&quot;">​</a></h1><h2 id="元素水平、垂直居中" tabindex="-1">元素水平、垂直居中 <a class="header-anchor" href="#元素水平、垂直居中" aria-label="Permalink to &quot;元素水平、垂直居中&quot;">​</a></h2><h3 id="水平居中" tabindex="-1">水平居中 <a class="header-anchor" href="#水平居中" aria-label="Permalink to &quot;水平居中&quot;">​</a></h3><p>行内元素：</p><ul><li>text-align: center;</li></ul><p>块级元素：</p><ul><li><p>确定宽度的：</p><ol><li>margin: 0 auto;</li><li>父元素position: relative,子元素绝对定位并设置 margin-left: -width/2</li></ol></li><li><p>不确定宽度的：</p><ol><li>display:table，margin：0 auto</li><li>display：inline-block，text-align:center</li><li>display：flex，justify-content:center</li><li>display：grid，justify-content:center</li><li>父元素 相对定位，子元素绝对定位，+transform，translateX可以移动本身元素的50%。</li></ol></li></ul><h3 id="垂直居中" tabindex="-1">垂直居中 <a class="header-anchor" href="#垂直居中" aria-label="Permalink to &quot;垂直居中&quot;">​</a></h3><ul><li>纯文本利用line-height 设置于元素高度一致实现居中</li><li>通过设置父容器相对定位，子级设置绝对定位，margin实现自适应居中</li><li>父级设置display: flex; 子级设置margin为auto实现自适应居中</li><li>父级设置相对定位，子级设置绝对定位，并且通过位移transform 实现</li><li>table 布局，父级通过转换成表格形式，然后子级设置vertical-align 实现。（需要注意的是：vertical-align: middle使用的前提条件是内联元素以及display值为table-cell的元素）</li></ul>',9),r=[s];function n(o,c,d,h,_,p){return l(),i("div",null,r)}const f=a(t,[["render",n]]);export{u as __pageData,f as default};
