import{_ as t,c as e,o as a,a3 as i}from"./chunks/framework.RbRFL2qC.js";const h=JSON.parse('{"title":"typescript 基础","description":"","frontmatter":{},"headers":[],"relativePath":"ts-md/basis.md","filePath":"ts-md/basis.md","lastUpdated":null}'),s={name:"ts-md/basis.md"},l=i('<h1 id="typescript-基础" tabindex="-1">typescript 基础 <a class="header-anchor" href="#typescript-基础" aria-label="Permalink to &quot;typescript 基础&quot;">​</a></h1><h2 id="类型" tabindex="-1">类型 <a class="header-anchor" href="#类型" aria-label="Permalink to &quot;类型&quot;">​</a></h2><p>相比JavaScript，typescript拥有超级强大类型系统，包括但不限于：</p><ul><li>基本类型：number、string、boolean、symbol、null、undefined、void</li><li>对象类型：object、array、tuple、enum、any、unknown、never</li><li>类型推断：自动推断类型</li><li>类型断言：手动指定类型</li><li>类型守卫：类型判断</li><li>类型别名：给类型起一个新名字</li><li>类型合并：多个类型合并成一个类型</li><li>类型守卫：类型判断</li></ul>',4),r=[l];function n(o,c,p,d,_,u){return a(),e("div",null,r)}const b=t(s,[["render",n]]);export{h as __pageData,b as default};
